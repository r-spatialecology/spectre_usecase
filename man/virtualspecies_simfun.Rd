% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/virtualspecies_simfun.R
\name{virtualspecies_simfun}
\alias{virtualspecies_simfun}
\title{virtualspecies_simfun}
\usage{
virtualspecies_simfun(
  siminputrow,
  parameters,
  max_runs,
  autostop,
  writeRDS,
  outdir
)
}
\arguments{
\item{siminputrow}{define which row of the parameters tibble should be computed}

\item{parameters}{a parameter matrix containing details on the virtualspecies parameterization (see Details below)}

\item{max_runs}{maximum number of runs in spectre::run_optimization_min_conf()}

\item{autostop}{optimizer stops after this number of iterations with no improvement}

\item{writeRDS}{TRUE/FALSE, if TRUE, each run weill be stored as rds (can be useful when performing calculations on the HPC)}

\item{outdir}{directory for storing rds files (only used when writeRDS = TRUE)}
}
\value{
spectre results object
}
\description{
Simulation function to run several virtualspecies grids in an experiment (e.g. through the Q function)
}
\details{
This function is basically a complex wrapper around \code{spectre::run_optimization_min_conf()}.
However, this function allows to provide a parameter matrix to generate virtualspecies grids.

The parameters tibble can contain multiple experiments (parameterization) and the siminputrow value defines which one is executed.
The parameter tibble need to contain the following columns (parameters):
landscape_size ~ size of the generated virtualspecies landscape
corr_within  ~ correlation within virtual species (clustering of individuals of the same species)
gamma ~ total gamma of the generated landscape
beta ~ width of the distribution kernel of the virtualspecies
corr_among ~ correlation among species (clustering of different species at the same location)
random_seeds ~ random seeds to control stochasticity
}
\examples{
\dontrun{

## Here is an example of using the simfun locally:

library(future)
plan(multisession)

results <- furrr::future_map_dfr(seq(nrow(parameters)), function(x) {
  virtualspecies_simfun(siminputrow = x, 
                        parameters = parameters,
                        max_runs = max_runs,
                        writeRDS = FALSE,
                        outdir = dir.cloud)
                        })

}
}
